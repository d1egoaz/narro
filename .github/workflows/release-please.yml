name: Release Please

on:
  push:
    branches:
      - main

# Required permissions for release-please to create PRs and releases
permissions:
  contents: write          # Create releases and tags
  pull-requests: write     # Create and update pull requests
  issues: write            # Create and manage labels

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      version: ${{ steps.release.outputs.version }}
      pr: ${{ steps.release.outputs.pr }}
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json

  # Check if this push is from a merged release PR
  check-release-merge:
    runs-on: ubuntu-latest
    outputs:
      is_release_merge: ${{ steps.check.outputs.is_release_merge }}
      version: ${{ steps.check.outputs.version }}
      tag_name: ${{ steps.check.outputs.tag_name }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      
      - name: Check if this is a release merge
        id: check
        run: |
          # Get the commit message of the current commit
          COMMIT_MSG=$(git log -1 --pretty=format:"%s")
          echo "Commit message: $COMMIT_MSG"
          
          # Check if this is a release commit (merged release PR)
          if [[ "$COMMIT_MSG" =~ ^chore:\ release\ main\ \(\#[0-9]+\)$ ]] || [[ "$COMMIT_MSG" == "chore: release main" ]]; then
            echo "is_release_merge=true" >> $GITHUB_OUTPUT
            
            # Read version from manifest file
            VERSION=$(cat .release-please-manifest.json | grep -o '"[^"]*"[[:space:]]*:[[:space:]]*"[^"]*"' | cut -d'"' -f4)
            TAG_NAME="v$VERSION"
            
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
            echo "Detected release merge for version: $VERSION"
          else
            echo "is_release_merge=false" >> $GITHUB_OUTPUT
            echo "Not a release merge commit"
          fi

  # Create tag and GitHub release for merged release PR
  create-release-tag:
    needs: [check-release-merge]
    runs-on: ubuntu-latest
    if: ${{ needs.check-release-merge.outputs.is_release_merge == 'true' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Create tag and GitHub release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_NAME: ${{ needs.check-release-merge.outputs.tag_name }}
          VERSION: ${{ needs.check-release-merge.outputs.version }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          echo "Creating tag: $TAG_NAME"
          git tag "$TAG_NAME"
          git push origin "$TAG_NAME"
          
          # Extract changelog for this version from CHANGELOG.md
          CHANGELOG_CONTENT=""
          if [ -f "CHANGELOG.md" ]; then
            # Extract the changelog section for this version
            CHANGELOG_CONTENT=$(awk "/## \[$VERSION\]/{flag=1; next} /## \[/{flag=0} flag" CHANGELOG.md | sed '/^$/d')
            if [ -z "$CHANGELOG_CONTENT" ]; then
              CHANGELOG_CONTENT="Release $VERSION"
            fi
          else
            CHANGELOG_CONTENT="Release $VERSION"
          fi
          
          # Create GitHub release using REST API
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/releases \
            -d "{
              \"tag_name\":\"$TAG_NAME\",
              \"target_commitish\":\"${{ github.sha }}\",
              \"name\":\"$TAG_NAME\",
              \"body\":\"$CHANGELOG_CONTENT\",
              \"draft\":false,
              \"prerelease\":false,
              \"generate_release_notes\":false
            }"
          
          echo "âœ… Created tag and GitHub release: $TAG_NAME"
